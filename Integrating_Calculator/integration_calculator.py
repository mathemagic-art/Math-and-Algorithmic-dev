# -*- coding: utf-8 -*-
"""Integration_calculator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11mOkEzmDLU83GiQg2u2fnNQcsNwV6UaR

Integrating Calculator by Aisha
"""

from sympy import integrate
from sympy import *
from sympy.abc import a, x, y
# Checking the integrate function from sympy
# Trig, Poly, Expo, etc

print(integrate(cos(x),x)) # some trig integrals
print(integrate(tan(y),y))
print(integrate(log(x),x)) # log integral
print(integrate(x**2+a*x*y-x*y**2,x)) #some poly integrals
print(integrate(x*y, x))
print(integrate(x/(x**2+2*x+1), x))

from sympy import integrate, log, exp, oo
from sympy.abc import a, x, y

def integration_calculator(f,var,lower_limit='inf',upper_limit='inf'):
  # Bydefault the limits are set to infinity and it will calculate the indefinite integral,
  # If the limits are given then it will return the definite integral
  """
    integrate(f, x) returns the indefinite integral 
    integrate(f, (x, a, b)) returns the definite integral 
  """
  if lower_limit == upper_limit and upper_limit=='inf': # Checking the conidtion for indefinte integral
    return integrate(f,var) # given the indefinite integral
  else: # otherwise it is a definite integral
    return integrate(f, (var, lower_limit, upper_limit)) # given the definite integral

#Example for idefinite integral
print("Integral of Cos(x)")
print(integration_calculator(cos(x),x))
print("\nIntegral of Cos(x) from 0 to pi")
# Case for definite integral
import math
print(integration_calculator(cos(x),x,0,math.pi))





